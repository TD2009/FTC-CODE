package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotorEx;
import com.qualcomm.robotcore.hardware.CRServo;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;

@TeleOp

public class TwoGamepad extends LinearOpMode {

    private DcMotor RFMotor, RBMotor, LFMotor, LBMotor;
    private DcMotorEx VMotor;
    private CRServo FServo;

    @Override
    public void runOpMode() {
        RFMotor = hardwareMap.get(DcMotor.class, "RFMotor");
        RBMotor = hardwareMap.get(DcMotor.class, "RBMotor");
        LFMotor = hardwareMap.get(DcMotor.class, "LFMotor");
        LBMotor = hardwareMap.get(DcMotor.class, "LBMotor");
        VMotor = hardwareMap.get(DcMotorEx.class, "VMotor");

        VMotor.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);
        VMotor.setMode(DcMotor.RunMode.RUN_USING_ENCODER);

        FServo = hardwareMap.get(CRServo.class, "FServo");

        telemetry.addData("Status", "Running");
        telemetry.addData("Mode", "waiting");
        waitForStart();
        telemetry.addData("Mode", "running");

        while (opModeIsActive()) {
            double RtgtPowerY = 0, LtgtPowerY = 0, LtgtPowerX = 0, ORtgtPowerY = 0, OLtgtPowerY = 0, OLtgtPowerX = 0;

            RFMotor.setDirection(DcMotor.Direction.REVERSE);
            RBMotor.setDirection(DcMotor.Direction.REVERSE);

            ORtgtPowerX = gamepad2.right_stick_x;
            ORtgtPowerY = gamepad2.right_stick_y;
            double OrealPower = (RtgtPowerX + RtgtPowerY) / 2;
            if (gamepad2.right_stick_x > 0 && gamepad2.right_stick_y > 0) {
                LFMotor.setPower(OrealPower);
                RBMotor.setPower(OrealPower);
            } else if (gamepad2.right_stick_x < 0 && gamepad2.right_stick_y > 0) {
                LBMotor.setPower(OrealPower);
                RFMotor.setPower(OrealPower);
            } else if (gamepad2.right_stick_x > 0 && gamepad2.right_stick_y < 0) {
                RFMotor.setPower(-OrealPower);
                LBMotor.setPower(-OrealPower);
            } else if (gamepad2.right_stick_x < 0 && gamepad2.right_stick_y < 0) {
                LFMotor.setPower(-OrealPower);
                RBMotor.setPower(-OrealPower);
            }

            if (gamepad1.right_trigger != 0) {
                Claw.setPower(-1);
            } else if (gamepad1.left_trigger != 0) {
                Claw.setPower(0.6);
            }

            if (gamepad1.dpad_left) {
                FServo.setPower(1);
            } else if (gamepad1.dpad_right) {
                FServo.setPower(-1);
            }

            OLtgtPowerY = gamepad2.left_stick_y;
            OLtgtPowerX = gamepad2.right_stick_x;

            if (OLtgtPowerY != 0) {
                LBMotor.setPower(OLtgtPowerY);
                LFMotor.setPower(OLtgtPowerY);
                RBMotor.setPower(-OLtgtPowerY);
                RFMotor.setPower(-OLtgtPowerY);
            }

            if (gamepad2.right_trigger != 0) {
                Claw.setPower(-1);
            } else if (gamepad2.left_trigger != 0) {
                Claw.setPower(0.6);
            }

            if (gamepad2.dpad_left) {
                FServo.setPower(0.3);
            } else if (gamepad2.dpad_right) {
                FServo.setPower(-1);
            }

            FServo.setPower(gamepad2.left_stick_x);

            while (gamepad1.dpad_up && VMotor.getCurrentPosition() < 3000) {
                VMotor.setPower(0.7);
                telemetry.addData("Encoder value", VMotor.getCurrentPosition());
                telemetry.update();
            }

            VMotor.setPower(0);

            while (gamepad1.dpad_down && VMotor.getCurrentPosition() > 0) {
                VMotor.setPower(-0.7);
                telemetry.addData("Encoder value", VMotor.getCurrentPosition());
                telemetry.update();
            }

            VMotor.setPower(0);

            telemetry.addData("Encoder value", VMotor.getCurrentPosition());
            telemetry.update();
        }
    }
}
