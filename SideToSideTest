package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.Servo;
import com.qualcomm.robotcore.hardware.CRServo;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;

public class SetUpClass {
   static void SetUp() {
        telemetry.addData("Status","Running");
        telemetry.update();
        
        telemetry.addData("Mode", "waiting");
        telemetry.update();
    
        waitForStart();

        telemetry.addData("Mode", "running");
        telemetry.update();
   }
}
@TeleOp

public class SideToSideTest extends LinearOpMode{
    private DcMotor RFMotor;
    private DcMotor RBMotor;
    private DcMotor LFMotor;
    private DcMotor LBMotor;
    private CRServo LeftArmServo;
    private CRServo RightArmServo;
    
    @Override
    public void runOpMode() {
        RFMotor = hardwareMap.get(DcMotor.class,"RFMotor");
        RBMotor = hardwareMap.get(DcMotor.class,"RBMotor");
        LFMotor = hardwareMap.get(DcMotor.class,"LFMotor");
        LBMotor = hardwareMap.get(DcMotor.class,"LBMotor");
        LeftArmServo=hardwareMap.get(CRServo.class,"LeftArmServo");
        RightArmServo=hardwareMap.get(CRServo.class,"RightArmServo");

        SetUp();
        
        while (opModeIsActive()) { 
            
                double LeftServoPower = 0;
                double RightServoPower = 0;
                double power = gamepad1.left_stick_x;
        
                LBMotor.setDirection(DcMotor.Direction.REVERSE);
                RBMotor.setDirection(DcMotor.Direction.REVERSE);
                RFMotor.setDirection(DcMotor.Direction.REVERSE);
                LeftServoPower= gamepad1.left_trigger;
                RightServoPower= gamepad1.right_trigger;
    
                LeftArmServo.setPower(LeftServoPower);
                RightArmServo.setPower(RightServoPower);
                
                if (power<0) {
                    LBMotor.setPower(power);
                    LFMotor.setPower(-power);
                    RBMotor.setPower(-power);
                    RFMotor.setPower(power);
                }else if (power>0) {
                    LBMotor.setPower(-power);
                    LFMotor.setPower(power);
                    RBMotor.setPower(power);
                    RFMotor.setPower(-power);
                }
        }
    }
}
